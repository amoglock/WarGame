
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "gameObject.sol";

contract BaseStation is gameObject {

    address public baseAddress = this;

    mapping(string => uint) units;
    mapping(uint => uint) unitsAddr;

    function getArmor() virtual override view internal returns  (string , uint) {
        return("Base armor = ", armorBase);
        return("Warrior armor = ", armorWarrior);
        return("Archer armor = ", armorArcher);
    }

    

    function addUnit(uint unitId, uint addr, string typeUnit) public {
        unitsAddr[unitId] = addr;
        units[typeUnit] = unitId;
        tvm.accept();
    }

    
    function deleteUnit(uint unitId) private {
        require(this == baseAddress);
        unitsAddr[unitId] = 0;
        tvm.accept();
    }


    function destroy(address) virtual override external{
        require(msg.sender == baseAddress);
        baseKiller.transfer(1, true, 160);
        tvm.accept();
    }


    function destroyWarrior(InterfaceGameObject myAddress, address enemy) private {
        myAddress.destroy(enemy);
        tvm.accept();
    }

    function destroyArcher(InterfaceGameObject myAddress, address enemy) private {
        myAddress.destroy(enemy);
        tvm.accept();
    }
}